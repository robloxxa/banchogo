/*
THIS CODE GENERATED BY tools/cmd/eventhandler
SEE event_types.go INSTEAD
!!!DO NOT EDIT BY HAND!!!
*/

package banchogo

{{range $k, $v := .}}
func (eh {{$k}}) Call(a ...interface{}) { {{if hasEllipsis $v}}{{$type := getEllipsisType $v}}
	var ellipsis []{{$type}}
	if len(a) >= eh.NumField() {
		ellipsis = make([]{{$type}}, len(a) - eh.NumField() + 1)
		for i := eh.NumField() - 1 ; i < len(a) ; i++ {
			ellipsis[i] = a[i].({{$type}})
		}
	}{{end}}
    eh({{formatTypeAssert $v}})
}

func (eh {{$k}}) NumField() int {
	return {{len $v}}
}
{{end}}

func interfaceToEventHandler(handler interface{}) EventHandler {
	switch eh := handler.(type) { {{range $k, $v := .}}
	case func({{join $v ", "}}): return {{$k}}(eh){{end}}
    default:
		return nil
    }
}
