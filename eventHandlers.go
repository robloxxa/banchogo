/*
THIS CODE GENERATED BY tools/cmd/eventhandler
SEE event_types.go INSTEAD
!!!DO NOT EDIT BY HAND!!!
*/

package banchogo

func (eh ChannelMemberHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].(*ChannelMember)

	eh(a0)
}

func (eh ChannelMemberHandlerType) NumField() int {
	return 1
}

func (eh ChannelMessageHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].(*ChannelMessage)

	eh(a0)
}

func (eh ChannelMessageHandlerType) NumField() int {
	return 1
}

func (eh ConnectStateHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].(ConnectState)

	eh(a0)
}

func (eh ConnectStateHandlerType) NumField() int {
	return 1
}

func (eh EllipseInterfaceHandlerType) Call(a ...interface{}) {
	var ellipsis []interface{}
	if len(a) >= eh.NumField() {
		ellipsis = make([]interface{}, len(a)-eh.NumField()+1)
		for i := eh.NumField() - 1; i < len(a); i++ {
			ellipsis[i], _ = a[i].(interface{})
		}
	}

	eh(ellipsis...)
}

func (eh EllipseInterfaceHandlerType) NumField() int {
	return 1
}

func (eh EmptyHandlerType) Call(a ...interface{}) {
	eh()
}

func (eh EmptyHandlerType) NumField() int {
	return 0
}

func (eh MessageHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].(Message)

	eh(a0)
}

func (eh MessageHandlerType) NumField() int {
	return 1
}

func (eh PrivateMessageHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].(*PrivateMessage)

	eh(a0)
}

func (eh PrivateMessageHandlerType) NumField() int {
	return 1
}

func (eh RawMessageHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].([]string)

	eh(a0)
}

func (eh RawMessageHandlerType) NumField() int {
	return 1
}

func (eh WithErrorHandlerType) Call(a ...interface{}) {
	a0, _ := a[0].(error)

	eh(a0)
}

func (eh WithErrorHandlerType) NumField() int {
	return 1
}

func interfaceToEventHandler(handler interface{}) EventHandler {
	switch eh := handler.(type) {
	case func(*ChannelMember):
		return ChannelMemberHandlerType(eh)
	case func(*ChannelMessage):
		return ChannelMessageHandlerType(eh)
	case func(ConnectState):
		return ConnectStateHandlerType(eh)
	case func(...interface{}):
		return EllipseInterfaceHandlerType(eh)
	case func():
		return EmptyHandlerType(eh)
	case func(Message):
		return MessageHandlerType(eh)
	case func(*PrivateMessage):
		return PrivateMessageHandlerType(eh)
	case func([]string):
		return RawMessageHandlerType(eh)
	case func(error):
		return WithErrorHandlerType(eh)
	default:
		return nil
	}
}
