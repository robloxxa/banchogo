/*
THIS CODE GENERATED BY tools/cmd/eventhandler
SEE event_types.go INSTEAD
!!!DO NOT EDIT BY HAND!!!
*/

package banchogo

func (eh ChannelMessageHandlerType) Call(a ...interface{}) {
	eh(a[0].(*ChannelMessage))
}

func (eh ChannelMessageHandlerType) NumField() int {
	return 1
}

func (eh EmptyHandlerType) Call(a ...interface{}) {
	eh()
}

func (eh EmptyHandlerType) NumField() int {
	return 0
}

func (eh MessageHandlerType) Call(a ...interface{}) {
	eh(a[0].(BanchoMessage))
}

func (eh MessageHandlerType) NumField() int {
	return 1
}

func (eh PrivateMessageHandlerType) Call(a ...interface{}) {
	eh(a[0].(*PrivateMessage))
}

func (eh PrivateMessageHandlerType) NumField() int {
	return 1
}

func (eh RawMessageHandlerType) Call(a ...interface{}) {
	eh(a[0].([]string))
}

func (eh RawMessageHandlerType) NumField() int {
	return 1
}

func (eh WithErrorHandlerType) Call(a ...interface{}) {
	eh(a[0].(error))
}

func (eh WithErrorHandlerType) NumField() int {
	return 1
}

func interfaceToEventHandler(handler interface{}) EventHandler {
	switch eh := handler.(type) {
	case func(*ChannelMessage):
		return ChannelMessageHandlerType(eh)
	case func():
		return EmptyHandlerType(eh)
	case func(BanchoMessage):
		return MessageHandlerType(eh)
	case func(*PrivateMessage):
		return PrivateMessageHandlerType(eh)
	case func([]string):
		return RawMessageHandlerType(eh)
	case func(error):
		return WithErrorHandlerType(eh)
	default:
		return nil
	}
}
